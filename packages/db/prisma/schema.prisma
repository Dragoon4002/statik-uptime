// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generate/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid()) @map("_id") @db.ObjectId
  email         String   @unique
  role          Int      @default(0)
  walletAddress String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  xp            Int      @default(0)

  // relations
  websites Website[]
}

model Website {
  id        String    @id @default(uuid()) @map("_id") @db.ObjectId
  url       String
  userId    String    @db.ObjectId
  disabled  Boolean   @default(false)
  interval  Int       @default(60)
  lastCheck DateTime?

  // relations
  ticks Tick[]
  user  User   @relation(fields: [userId], references: [id])
}

model Validator {
  id        String   @id @default(uuid()) @map("_id") @db.ObjectId
  ip        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  ticks Tick[]
}

model Tick {
  id          String   @id @default(uuid()) @map("_id") @db.ObjectId
  websiteId   String   @db.ObjectId
  validatorId String   @db.ObjectId
  url         String
  location    String
  ip          String
  latency     Int
  statusCode  Int
  createdAt   DateTime @default(now())

  // relations
  website   Website   @relation(fields: [websiteId], references: [id])
  validator Validator @relation(fields: [validatorId], references: [id])
}
